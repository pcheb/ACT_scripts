!   Commands inserted into this file will be executed immediately after the ANSYS /POST1 command.

!   Active UNIT system in Workbench when this object was created:  Metric (m, kg, N, s, V, A)
!   NOTE:  Any data that requires units (such as mass) is assumed to be in the consistent solver unit system.
!                See Solving Units in the help system for more information.


!   Commands inserted into this file will be executed immediately after the ANSYS /POST1 command.

!   Active UNIT system in Workbench when this object was created:  Metric (mm, t, N, s, mV, mA)
!   NOTE:  Any data that requires units (such as mass) is assumed to be in the consistent solver unit system.
!                See Solving Units in the help system for more information.


!   Commands inserted into this file will be executed immediately after the ANSYS /POST1 command.

!   Active UNIT system in Workbench when this object was created:  Metric (mm, t, N, s, mV, mA)
!   NOTE:  Any data that requires units (such as mass) is assumed to be in the consistent solver unit system.
!                See Solving Units in the help system for more information.


resume,,db

!------------------------------- Script version-----------------------------------
*dim, script_version, string, 4
script_version(1) = '1.1' 
!---------------------------------------------------------------------------------


! !The component definition can be copied from the excel file 
 number_comp =54
 *dim, components, string, 80, number_comp
 components(1,1)= 'RSMF_FFI_5_IF'
 components(1,2)= 'RSMF_FFI_4_IF'
 components(1,3)= 'RSMF_FFI_3_IF'
 components(1,4)= 'RSMF_FFI_2_IF'
 components(1,5)= 'RSMF_FFI_1_IF'
 components(1,6)= 'RSMF_FFI_6_IF'
 components(1,7)= 'M1_FFI_6_IF'
 components(1,8)= 'M1_FFI_5_IF'
 components(1,9)= 'M1_FFI_4_IF'
 components(1,10)= 'M1_FFI_3_IF'
 components(1,11)= 'M1_FFI_2_IF'
 components(1,12)= 'M1_FFI_1_IF'
 components(1,13)= 'M2_FFI_4_IF'
 components(1,14)= 'M2_FFI_5_IF'
 components(1,15)= 'M2_FFI_6_IF'
 components(1,16)= 'M2_FFI_1_IF'
 components(1,17)= 'M2_FFI_2_IF'
 components(1,18)= 'M2_FFI_3_IF'
 components(1,19)= 'M3_FFI_4_IF'
 components(1,20)= 'M3_FFI_5_IF'
 components(1,21)= 'M3_FFI_6_IF'
 components(1,22)= 'M3_FFI_1_IF'
 components(1,23)= 'M3_FFI_2_IF'
 components(1,24)= 'M3_FFI_3_IF'
 components(1,25)= 'M4_FFI_5_IF'
 components(1,26)= 'M4_FFI_4_IF'
 components(1,27)= 'M4_FFI_1_IF'
 components(1,28)= 'M4_FFI_3_IF'
 components(1,29)= 'M4_FFI_2_IF'
 components(1,30)= 'M4_FFI_6_IF'
 components(1,31)= 'M5_FFI_3_IF'
 components(1,32)= 'M5_FFI_4_IF'
 components(1,33)= 'M5_FFI_5_IF'
 components(1,34)= 'M5_FFI_2_IF'
 components(1,35)= 'M5_FFI_6_IF'
 components(1,36)= 'M5_FFI_1_IF'
 components(1,37)= 'M6_FFI_1_IF'
 components(1,38)= 'M6_FFI_2_IF'
 components(1,39)= 'M6_FFI_3_IF'
 components(1,40)= 'M6_FFI_4_IF'
 components(1,41)= 'M6_FFI_5_IF'
 components(1,42)= 'M6_FFI_6_IF'
 components(1,43)= 'M7_FFI_3_IF'
 components(1,44)= 'M7_FFI_4_IF'
 components(1,45)= 'M7_FFI_1_IF'
 components(1,46)= 'M7_FFI_6_IF'
 components(1,47)= 'M7_FFI_5_IF'
 components(1,48)= 'M7_FFI_2_IF'
 components(1,49)= 'M8_FFI_4_IF'
 components(1,50)= 'M8_FFI_3_IF'
 components(1,51)= 'M8_FFI_2_IF'
 components(1,52)= 'M8_FFI_5_IF'
 components(1,53)= 'M8_FFI_6_IF'
 components(1,54)= 'M8_FFI_1_IF'	
    
!--- End component definition ---


!------------------------------- Extract load case name-----------------------------------
!Output loadcase_name 
!Script will not work if project name and load case name contains '--' or ' (' and if names are too long (combined more than ~230 characters)   

*DIM,title,STRING,248
*DIM,title_part,string,8
*DIM,title_part_old,string,8

*GET,title_part(1),ACTIVE,0,TITLE,0, START,0 !Read the first 8 characters of the title (The title contains the file name and the loadcase name)
i=1

*DOWHILE, i
	title_part_old(1) = '%title_part(1)%' 
	title(%i%)='%title_part(1)%' 
	i=i+8
	*GET,title_part(1),ACTIVE,0,TITLE,0,START,%i%
	comp=STRPOS(title_part_old(1),title_part(1)) !compare previous read out characters with current read out (becomes the same as soon as i is greater than title length--> stop loop)
	*IF,comp,NE,0,THEN
		*EXIT
	*endif	
*enddo

!Cut out loadcase name from full title
start='--'
end=' ('
pos_start=STRPOS(title(1),start) + 2
pos_end=STRPOS(title(1),end)
nChar = pos_end - pos_start
loadcase_name=STRSUB(title(1),pos_start,nChar)

!------------------------------- end extraction load case name-----------------------------------

*GET,max_st, ACTIVE, 0, SET,NSET,,

set,first
*CFOPEN,'%loadcase_name%_FFI_IF_Tav',txt 			
*GET,currentunitsystem, ACTIVE, 0,UNITS,
*VWRITE,'Version',script_version(1),'Unitsys=%currentunitsystem%'
%C %C %C


*do,j,1,max_st	

	number_results = 1
	*dim, results, array, number_comp, number_results
	*do,i,1,number_comp
		cmsel,s,components(1,i)
		esln,s,1
		esel,r,ename,,174	!Reselect contact elements 
		!----------------------------------------------------------
        elis
        !areangewichtete gemittelte elementgemittelte Temperaturen (etable mittelt direkt ueber das Element)
        !area, noe siehe oben  
		*get,noe,elem,,count
        *dim,element_area,array,noe        
        *dim,element_temp,array,noe
		*dim,temp_x_area,array,noe
        
		etab,element_t,temp 
		eid=elnext(0)
		k=1
        *do,k,1,noe
          *get,element_area(k),elem,eid,area
		  *get,element_temp(k),elem,eid,etab,element_t
          eid=elnext(eid)
        *enddo
		
		*voper,temp_x_area, element_temp, MULT, element_area
		*vscfun,sum_temp_x_area,sum,temp_x_area
        *vscfun,sum_element_area,sum,element_area
		
        t_av = sum_temp_x_area / sum_element_area
         
		
		!--- Save to results array ---
		results(%i%,1)=t_av
		
		
		 ! *VWRITE, 'temperatures' ,'Area'
! %22C %12C	
		! *vwrite,element_temp(1,1),element_area(1,1)
! %16.9G %16.9G
		

	*enddo


	!---------------Herrausschreiben der Ergebnisse-------------
	*GET,currenttime, ACTIVE, 0, SET, TIME,,
	*VWRITE,'Time=%currenttime%,Step_%j%'
%24C
	*VWRITE,'Component','T_average'
%22C %12C	
	*vwrite,components(1,1),results(1,1)
%26C %16.9G


	set,NEXT
*enddo
*cfclose

